generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  verified       Boolean   @default(false)
  count          Int       @default(0)

  accounts    Account[]
  collections Collection[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Collection {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  author            String?
  authorDescription String
  category          String
  imageUrl          String?
  publisher         String
  summery           String
  title             String
  Adventure         Int     @default(0)
  Horror            Int     @default(0)
  Mystery           Int     @default(0)
  ScienceFiction    Int     @default(0)
  Fantasy           Int     @default(0)
  Romance           Int     @default(0)
  Thriller          Int     @default(0)
  Crime             Int     @default(0)
  Biography         Int     @default(0)
  Comedy            Int     @default(0)
  Science           Int     @default(0)
  NonFiction        Int     @default(0)
  Eassy             Int     @default(0)
  SelfHelp          Int     @default(0)
  userId            String? @db.ObjectId
  isValidate        Int     @default(0)
  isShow            Int     @default(0)

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}
